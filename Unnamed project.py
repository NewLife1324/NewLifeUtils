IyBuZXcgcHJvamVjdA0KZnJvbSBOZXdMaWZlVXRpbHMgaW1wb3J0ICoNCmNsYXNzIERhdGFTZWN0b3I6DQogICAgcGFzcw0KY2xhc3MgRGVmU2VjdG9yOg0KICAgIGNsYXNzIFNjaG9vbChvYmplY3QpOg0KICAgICAgICBwYXNzDQogICAgY2xhc3MgQ2xhc3Mob2JqZWN0KToNCiAgICAgICAgcGFzcw0KICAgIGNsYXNzIENhYmluZXQob2JqZWN0KToNCiAgICAgICAgcGFzcw0KICAgIA0KICAgIGNsYXNzIFBlcnNvbihvYmplY3QpOg0KICAgICAgICBuYW1lID0gJ9CQ0YDQutCw0LTQuNC5Jw0KICAgICAgICBzdXJuYW1lID0gJ9Ca0L7RgtCw0LfQvtCyJw0KICAgICAgICBwYXRyb255bWljID0gJ9Cc0LjRhdCw0LjQu9C+0LLQuNGHJw0KICAgICAgICANCiAgICBjbGFzcyBTdGFmZihQZXJzb24pOg0KICAgICAgICBzdGFmZl90eXBlID0gJ2RpcmVjdG9yJw0KICAgIGNsYXNzIFRlYWNoZXIoUGVyc29uKToNCiAgICAgICAgc2Nob29sX3N1YmplY3RzID0gWyfQnNCw0YLQtdC80LDRgtC40LrQsCcsICfQpNC40LfQuNC60LAnXQ0KICAgIGNsYXNzIFN0dWRlbnQoUGVyc29uKToNCiAgICAgICAgcGFzcw0KY2xhc3MgQ29tbWFuZHNTZWN0b3I6DQogICAgY2xhc3MgSW5mbyhDdXN0b21TaGVsbE1vZHVsZS5Db21tYW5kKToNCiAgICAgICAgY29tbWFuZCA9ICLQuNC90YTQviINCiAgICAgICAgYWxpYXNlcyA9IFtjb21tYW5kLCAi0LjQvdGE0L7RgNC80LDRhtC40Y8iXQ0KICAgICAgICBkZXNjcmlwdGlvbiA9ICLQktGB0Y8g0LjQvdGE0L7RgNC80LDRhtC40Y8g0L4g0LrQvtC80LzQsNC90LTQsNGFIg0KICAgICAgICByZXF1aXJlZCA9IFtdDQogICAgICAgIG9wdGlvbmFsID0gW10NCiAgICAgICAgc2tpcGNoZWNrID0gRmFsc2UNCiAgICAgICAgZGVmIHJ1bihjb25zb2xlKToNCiAgICAgICAgICAgIGluZm8gPSAnXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbicNCiAgICAgICAgICAgIGluZm8gKz0gJ9Ct0YLQviDQvNC+0Lkg0L3QvtCy0YvQuSDQv9GA0L7QtdC60YIg0L7RgdC90L7QstCw0L3QvdGL0Lkg0L3QsCBOTFU1XG4nDQogICAgICAgICAgICBpbmZvICs9ICfQkdC+0LvRjNGI0LUg0L3QtdGCINC00L7RgdGC0YPQv9C90L7QuSDQuNC90YTQvtGA0LzQsNGG0LjQuFxuJw0KICAgICAgICAgICAgaW5mbyArPSAnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4nDQogICAgICAgICAgICBjb25zb2xlLkxvZ2dlci5sb2coaW5mbykNCg0KaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoNCiAgICAjSW5pdCBDdXN0b21TaGVsbE1vZHVsZQ0KICAgIGNtZCA9IEN1c3RvbVNoZWxsTW9kdWxlKCkNCiAgICANCiAgICAjUmVnaXN0ZXIgY29tbWFuZHMNCiAgICBjbWQucmVnaXN0ZXJDb21tYW5kKENvbW1hbmRzU2VjdG9yLkluZm8pDQogICAgDQogICAgI3N0YXJ0IG1haW4gY3ljbGUNCiAgICBjbWQubWFpbigpDQo